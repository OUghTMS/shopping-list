{"version":3,"sources":["components/nav-bar.js","components/header.js","components/need-item.js","components/need-list.js","components/completed-item.js","components/completed-list.js","components/list.js","components/measurement-type.js","components/item-edit.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","react_router_dom","to","Component","NeedItem","_this","this","_this$props$item","props","item","itemName","measurementType","itemQuantity","id","onClick","cancel","complete","NeedList","need","map","need_item_NeedItem","key","CompletedItem","completed","completed_item_CompletedItem","List","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","localStorage","length","setItem","JSON","stringify","_JSON$parse","parse","getItem","setState","newNeedList","filter","toConsumableArray","newCompletedList","concat","need_list_NeedList","completed_list_NeedList","MEASUREMENT_TYPES","MeasurementType","value","onChange","onItemMeasurementChange","KILOGRAMS","PIECES","LITERS","ItemEdit","showWarning","onItemValueChange","addNewItem","event","defineProperty","target","name","console","log","Date","now","shoppingList","window","location","replace","warning","placeholder","type","measurement_type_MeasurementType","react_router","path","exact","component","App","basename","process","header_NavBar","nav_bar_NavBar","main_NavBar","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9104ec58.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class NavBar extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"nav-bar\">\r\n          <Link to=\"/\" className=\"left-button\">Shopping List</Link>\r\n          <Link to=\"/add\" className=\"right-button\">Add</Link>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class NavBar extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1 className=\"header-text\">Shopping List</h1>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class NeedItem extends Component {\r\n  render() {\r\n    const { itemName, measurementType, itemQuantity, id } = this.props.item;\r\n    return (\r\n      <div className=\"item\">\r\n        <div className=\"item-head\">\r\n          <div className=\"item-short-descr\">\r\n            <div className=\"item-name\">{itemName}</div>\r\n            <div className=\"item-type\">{measurementType}:</div>\r\n            <div className=\"item-weight-number\">{itemQuantity}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"item-description\">\r\n          <div className=\"item-buttons\">\r\n            <button className=\"cancel\" onClick={() => this.props.cancel(id)}>Ð¡ancel</button>\r\n            <button className=\"complete\" onClick={() => this.props.complete(id)}>Complete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nimport NeedItem from './need-item'\r\n\r\nexport default class NeedList extends Component {\r\n  render() {\r\n    const item = this.props.need.map(item => {\r\n      return <NeedItem \r\n              key={item.id} \r\n              item={item} \r\n              cancel={this.props.cancel} \r\n              complete={this.props.complete}/>\r\n      })\r\n    return (\r\n        <div>\r\n          {item}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class CompletedItem extends Component {\r\n  render() {\r\n    const {itemName, measurementType, itemQuantity} = this.props.item;\r\n    return (\r\n        <div className=\"item-head\">\r\n            <div className=\"item-short-descr\">\r\n                <div className=\"item-name\">{itemName}</div>\r\n                <div className=\"item-type\">{measurementType}:</div>\r\n                <div className=\"item-weight-number\">{itemQuantity}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nimport CompletedItem from './completed-item'\r\n\r\nexport default class NeedList extends Component {\r\n  render() {\r\n    const item = this.props.completed.map(item => { \r\n      return <CompletedItem \r\n                key={item.id}\r\n                item={item}/>\r\n        })\r\n    return (\r\n        <div>\r\n            {item}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport NeedList from './need-list';\r\nimport CompletedList from './completed-list';\r\n\r\nexport default class List extends Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.state= {\r\n      need: [],\r\n      completed: []\r\n    }\r\n\r\n    this.complete = this.complete.bind(this);\r\n    this.cancel = this.cancel.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(localStorage.length === 0){\r\n      const start = {need: [], completed: []};\r\n      localStorage.setItem('shoppingList', JSON.stringify(start));\r\n    }\r\n    const {need, completed} = JSON.parse(localStorage.getItem('shoppingList'));\r\n    this.setState({\r\n      need: need,\r\n      completed: completed,\r\n    });\r\n  }\r\n\r\n  cancel(id) {\r\n    const newNeedList = this.state.need.filter(item => id !== item.id);\r\n    localStorage.setItem('shoppingList', JSON.stringify(\r\n        {need: newNeedList,\r\n        completed: [...this.state.completed]}\r\n      ));\r\n    this.setState({\r\n      need: newNeedList\r\n    })\r\n  }\r\n\r\n  complete(id) {\r\n    const newNeedList = this.state.need.filter(item => id !== item.id);\r\n    const newCompletedList = this.state.need.filter(item => id === item.id);\r\n    localStorage.setItem('shoppingList', JSON.stringify({\r\n      need: newNeedList,\r\n      completed: [...this.state.completed, ...newCompletedList]\r\n    }));\r\n    this.setState({\r\n      need: newNeedList,\r\n      completed: [...this.state.completed, ...newCompletedList]\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n        <div>\r\n          <h3>Need:</h3>\r\n          <div>\r\n            <NeedList need={this.state.need} complete={this.complete} cancel={this.cancel}/>\r\n          </div>\r\n          <h3>Completed:</h3>\r\n          <div>\r\n            <CompletedList completed={this.state.completed}/>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nconst MEASUREMENT_TYPES = {KILOGRAMS: 'Kilograms', PIECES: 'Pieces', LITERS: 'Liters' };\r\n\r\nexport default class MeasurementType extends Component {\r\n    render() {\r\n        return (\r\n            <select className=\"input\" value={this.props.measurementType} onChange={this.props.onItemMeasurementChange}>\r\n                <option value={MEASUREMENT_TYPES.PIECES}>Pieces</option>\r\n                <option value={MEASUREMENT_TYPES.KILOGRAMS}>Kilograms</option>\r\n                <option value={MEASUREMENT_TYPES.LITERS}>Liters</option>\r\n            </select>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport MeasurementType from './measurement-type'\r\n\r\nconst MEASUREMENT_TYPES = {KILOGRAMS: 'Kilograms', PIECES: 'Pieces', LITERS: 'Liters' };\r\n\r\nexport default class ItemEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            itemName: \"\",\r\n            itemQuantity: \"\",\r\n            measurementType: MEASUREMENT_TYPES.PIECES,\r\n            showWarning: false\r\n        }\r\n        this.onItemValueChange = this.onItemValueChange.bind(this);\r\n        this.onItemMeasurementChange = this.onItemMeasurementChange.bind(this);\r\n        this.addNewItem = this.addNewItem.bind(this);\r\n    }\r\n\r\n    onItemValueChange(event){\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    onItemMeasurementChange(event){\r\n        this.setState({measurementType: event.target.value});\r\n        console.log(this.state.measurementType);\r\n    }\r\n\r\n    addNewItem() {\r\n        if(this.state.itemName && this.state.itemQuantity) {\r\n            const a = {\r\n                itemName: this.state.itemName,\r\n                measurementType: this.state.measurementType,\r\n                itemQuantity: this.state.itemQuantity,\r\n                id: Date.now()\r\n            }\r\n            const shoppingList = JSON.parse(localStorage.getItem('shoppingList'));\r\n\r\n            shoppingList.need = [...shoppingList.need, a];\r\n\r\n            localStorage.setItem('shoppingList', JSON.stringify(shoppingList));\r\n\r\n            this.setState({ \r\n                itemName: \"\",\r\n                itemQuantity: \"\", \r\n                showWarning: false\r\n            });\r\n\r\n            window.location.replace(\"/\");\r\n        }   \r\n        else {\r\n            this.setState({ showWarning: true});\r\n        }\r\n    }\r\n  render() {\r\n    const warning = this.state.showWarning && \r\n                <div className=\"warning\">Please check the entered!</div>\r\n    return (\r\n        <div>\r\n            <h3>Please, provide new item information:</h3>\r\n            <div className=\"add-to-list\">\r\n                <div>\r\n                    <div className=\"put\">\r\n                        <input\r\n                            placeholder=\"Name\"\r\n                            className=\"input focus-bg\"\r\n                            type=\"text\" \r\n                            value={this.state.itemName}\r\n                            name=\"itemName\"\r\n                            onChange={this.onItemValueChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"put\">\r\n                        <MeasurementType measurementType={this.state.measurementType} onItemMeasurementChange={this.onItemMeasurementChange}/>\r\n                        <input \r\n                            placeholder={this.state.measurementType}\r\n                            className=\"input focus-bg\"\r\n                            type=\"text\" \r\n                            value={this.state.itemQuantity}\r\n                            name=\"itemQuantity\"\r\n                            onChange={this.onItemValueChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button className=\"add-button\" onClick={this.addNewItem}>Add</button>\r\n            {warning}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport List from './list';\r\nimport ItemEdit from './item-edit';\r\n\r\nexport default class NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={List} />\r\n          <Route path=\"/add\" exact component={ItemEdit} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport './App.css';\n\nimport NavBar from './components/nav-bar';\nimport Header from './components/header';\nimport Main from './components/main';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Header />\n          <NavBar />\n          <Main />\n        </div>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}