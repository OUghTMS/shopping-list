{"version":3,"sources":["components/nav-bar.js","components/header.js","components/need-item.js","components/need-list.js","components/completed-item.js","components/completed-list.js","components/list.js","components/add-to-list.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","react_router_dom","to","Component","NeedItem","_this","this","item","props","list","name","type","weightNumber","onClick","cancel","id","complete","NeedList","need","map","need_item_NeedItem","key","n","y","CompletedItem","completed","completed_item_CompletedItem","List","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","shoppingList","JSON","parse","localStorage","getItem","setState","pr","arr","toConsumableArray","i","length","splice","setItem","stringify","concat","need_list_NeedList","completed_list_NeedList","AddToList","warn","done","added","Change","checked","addNew","event","defineProperty","target","value","Math","floor","random","warning","onChange","react_router","path","exact","component","App","console","log","basename","process","header_NavBar","nav_bar_NavBar","main_NavBar","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ded4b51.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class NavBar extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"nav-bar\">\r\n            <Link to=\"/\" className=\"left-button\">Shopping List</Link>\r\n            <Link to=\"/add\" className=\"right-button\">Add+</Link>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class NavBar extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1 className=\"header-text\">Shopping List</h1>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class NeedItem extends Component {\r\n  render() {\r\n    const item = this.props.list;\r\n    return (\r\n      <div className=\"item\">\r\n        <div className=\"item-head\">\r\n          <div className=\"item-short-descr\">\r\n              <div className=\"item-name\">{item.name}</div>\r\n              <div className=\"item-type\">{item.type}:</div>\r\n              <div className=\"item-weight-number\">{item.weightNumber}</div>\r\n          </div>\r\n          <button className=\"arrow\">ðŸ¢“</button>\r\n        </div>\r\n        <div className=\"item-description\">\r\n          <div className=\"item-buttons\">\r\n            <button className=\"cancel\" onClick={() => this.props.cancel(item.id)}>Ð¡ancel</button>\r\n            <button className=\"complete\" onClick={() => this.props.complete(item.id)}>Complete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nimport NeedItem from './need-item'\r\n\r\nexport default class NeedList extends Component {\r\n  render() {\r\n    const item = this.props.need.map(list => {\r\n      return <NeedItem \r\n              key={list.id} \r\n              list={list} \r\n              cancel={this.props.n} \r\n              complete={this.props.y}/>\r\n      })\r\n    return (\r\n        <div>\r\n          {item}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class CompletedItem extends Component {\r\n  render() {\r\n    const item = this.props.item;\r\n    return (\r\n        <div className=\"item-head\">\r\n            <div className=\"item-short-descr\">\r\n                <div className=\"item-name\">{item.name}</div>\r\n                <div className=\"item-type\">{item.type}:</div>\r\n                <div className=\"item-weight-number\">{item.weightNumber}</div>\r\n            </div>\r\n            <button className=\"arrow\">ðŸ¢“</button>\r\n        </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nimport CompletedItem from './completed-item'\r\n\r\nexport default class NeedList extends Component {\r\n  render() {\r\n    const item = this.props.completed.map(list => { \r\n      return <CompletedItem \r\n                key={list.id}\r\n                item={list}/>\r\n        })\r\n    return (\r\n        <div className=\"\">\r\n            {item}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport NeedList from './need-list';\r\nimport CompletedList from './completed-list';\r\n\r\nexport default class List extends Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.state= {\r\n      need: [],\r\n      completed: []\r\n    }\r\n\r\n    this.complete = this.complete.bind(this);\r\n    this.cancel = this.cancel.bind(this);\r\n  }\r\n\r\n  componentWillMount(){\r\n    const shoppingList = JSON.parse(localStorage.getItem('shoppingList'));\r\n    this.setState({\r\n      need: shoppingList.need,\r\n      completed: shoppingList.completed,\r\n    });\r\n  }\r\n\r\n  cancel(pr) {\r\n    let arr = [...this.state.need];\r\n    for(let i=0; i<arr.length; i++)\r\n      if(pr === arr[i].id) arr.splice(i, 1);\r\n    localStorage.setItem('shoppingList', JSON.stringify(\r\n        {need: arr,\r\n        completed: [...this.state.completed]}\r\n      ));\r\n    this.setState({\r\n      need: arr\r\n    })\r\n  }\r\n\r\n  complete(pr) {\r\n    let arr = [...this.state.need];\r\n    let a;\r\n    for(let i=0; i<arr.length; i++)\r\n      if(pr === arr[i].id) a=arr.splice(i, 1);\r\n    localStorage.setItem('shoppingList', JSON.stringify(\r\n        {need: arr,\r\n        completed: [...this.state.completed, ...a]}\r\n      ));\r\n    this.setState({\r\n      need: arr,\r\n      completed: [...this.state.completed, ...a]\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n        <div className=\"\">\r\n          <h3>Need:</h3>\r\n          <div>\r\n            <NeedList need={this.state.need} y={this.complete} n={this.cancel}/>\r\n          </div>\r\n          <h3>Completed:</h3>\r\n          <div>\r\n            <CompletedList completed={this.state.completed}/>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nexport default class AddToList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            weightNumber: \"\",\r\n            type: \"weight\",\r\n            warn: false,\r\n            done: false,\r\n            added: \"\",\r\n        }\r\n        this.Change = this.Change.bind(this);\r\n        this.checked = this.checked.bind(this);\r\n        this.addNew = this.addNew.bind(this);\r\n    }\r\n\r\n    Change(event){\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    checked(event){\r\n        this.setState({\r\n            type: event.target.value\r\n        })\r\n    }\r\n    addNew() {\r\n        if(this.state.name !== \"\" && this.state.weightNumber !== \"\")\r\n        {\r\n            this.setState({ done: true});\r\n            this.setState({ warn: false});\r\n            this.setState({ added: this.state.name });\r\n            \r\n            const a = {\r\n                name: this.state.name,\r\n                type: this.state.type,\r\n                weightNumber: this.state.weightNumber,\r\n                id: Math.floor(Math.random() * 10000) + 1 + \"aaa\"\r\n            }\r\n            const shoppingList = JSON.parse(localStorage.getItem('shoppingList'));\r\n\r\n            shoppingList.need = [...shoppingList.need, a];\r\n\r\n            localStorage.setItem('shoppingList', JSON.stringify(shoppingList));\r\n            \r\n            //console.log(JSON.parse(localStorage.getItem('shoppingList')));\r\n\r\n            this.setState({ name: \"\" });\r\n            this.setState({ weightNumber: \"\" });\r\n        }   \r\n        else\r\n        { \r\n            this.setState({ done: false});\r\n            this.setState({ warn: true});\r\n        }\r\n    }\r\n  render() {\r\n    const warning = this.state.warn && \r\n                <div className=\"warning\">Please check the entered!</div>\r\n    const done = this.state.done && \r\n                <div className=\"done\">{this.state.added} successfully added</div>\r\n    \r\n    return (\r\n        <div className=\"\">\r\n            <h3>Enter information about the new task:</h3>\r\n            <div className=\"add-to-list\">\r\n                <div>\r\n                    <div className=\"put\">\r\n                        Name: \r\n                        <input\r\n                            className=\"input\"\r\n                            type=\"text\" \r\n                            value={this.state.name}\r\n                            name=\"name\"\r\n                            onChange={this.Change}\r\n                        />\r\n                    </div>\r\n                    <div className=\"put\">\r\n                            <input \r\n                                type=\"radio\"\r\n                                name=\"type\"\r\n                                value=\"weight\"\r\n                                checked={this.state.type === \"weight\"}\r\n                                onChange={this.checked}\r\n                            />weight\r\n                            <input \r\n                                type=\"radio\" \r\n                                name=\"type\"\r\n                                value=\"pieces\"\r\n                                checked={this.state.type === \"pieces\"}\r\n                                onChange={this.checked}\r\n                            />pieces:\r\n                            <input \r\n                                className=\"input\"\r\n                                type=\"text\" \r\n                                value={this.state.weightNumber}\r\n                                name=\"weightNumber\"\r\n                                onChange={this.Change}\r\n                            />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button className=\"add-button\" onClick={this.addNew}>Add</button>\r\n            {done}\r\n            {warning}\r\n            \r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport List from './list';\r\nimport AddToList from './add-to-list';\r\n\r\nexport default class NavBar extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"main\">\r\n            <Switch>\r\n                <Route path=\"/\" exact component={List} /> />\r\n                <Route path=\"/add\" exact component={AddToList} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport './App.css';\n\nimport NavBar from './components/nav-bar';\nimport Header from './components/header';\nimport Main from './components/main';\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    //localStorage.clear();\n    if(localStorage.length === 0){\n      const start = {need: [], completed: []};\n      localStorage.setItem('shoppingList', JSON.stringify(start));\n    }\n    console.log(JSON.parse(localStorage.getItem('shoppingList')));\n  }\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Header />\n          <NavBar />\n          <Main />\n        </div>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}